{"version":3,"sources":["vdom/createElement.js","../node_modules/lodash.zip/index.js","../node_modules/lodash.spread/index.js","vdom/render.js","vdom/diff.js","vdom/mount.js","vdom/index.js","index.js"],"names":["createElement","tagName","attrs","children","render","vNode","document","createTextNode","$el","Object","entries","key","value","setAttribute","child","appendChild","diff","oldVNode","newVNode","$node","remove","$newNode","replaceWith","patchAttrs","diffAttrs","patchChildren","diffChildren","oldAttrs","newAttrs","setAttrsPatches","keys","filter","attrName","hasOwnProperty","map","patches","oldAttrName","removeAttribute","concat","patch","oldVChildren","newVChildren","childPatches","additionalPatches","slice","length","newChild","$parent","childNodes","mount","$target","_createElement","_diff","_mount","_render","createApp","count","id","undefined","String","type","placeholder","src","state","vApp","$root","querySelector","setInterval","newVApp"],"mappings":"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","file":"src.3daa6c14.map","sourceRoot":"../src","sourcesContent":["export default function createElement(tagName, attrs = {}, children = []) {\n  return {\n    tagName,\n    attrs,\n    children,\n  };\n}\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array ? array.length : 0,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = array;\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * This method is like `_.zip` except that it accepts an array of grouped\n * elements and creates an array regrouping the elements to their pre-zip\n * configuration.\n *\n * @static\n * @memberOf _\n * @since 1.2.0\n * @category Array\n * @param {Array} array The array of grouped elements to process.\n * @returns {Array} Returns the new array of regrouped elements.\n * @example\n *\n * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n * // => [['a', 1, true], ['b', 2, false]]\n *\n * _.unzip(zipped);\n * // => [['a', 'b'], [1, 2], [true, false]]\n */\nfunction unzip(array) {\n  if (!(array && array.length)) {\n    return [];\n  }\n  var length = 0;\n  array = arrayFilter(array, function(group) {\n    if (isArrayLikeObject(group)) {\n      length = nativeMax(group.length, length);\n      return true;\n    }\n  });\n  return baseTimes(length, function(index) {\n    return arrayMap(array, baseProperty(index));\n  });\n}\n\n/**\n * Creates an array of grouped elements, the first of which contains the\n * first elements of the given arrays, the second of which contains the\n * second elements of the given arrays, and so on.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to process.\n * @returns {Array} Returns the new array of grouped elements.\n * @example\n *\n * _.zip(['a', 'b'], [1, 2], [true, false]);\n * // => [['a', 1, true], ['b', 2, false]]\n */\nvar zip = baseRest(unzip);\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = zip;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = array;\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\n/**\n * Creates a function that invokes `func` with the `this` binding of the\n * create function and an array of arguments much like\n * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n *\n * **Note:** This method is based on the\n * [spread operator](https://mdn.io/spread_operator).\n *\n * @static\n * @memberOf _\n * @since 3.2.0\n * @category Function\n * @param {Function} func The function to spread arguments over.\n * @param {number} [start=0] The start position of the spread.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var say = _.spread(function(who, what) {\n *   return who + ' says ' + what;\n * });\n *\n * say(['fred', 'hello']);\n * // => 'fred says hello'\n *\n * var numbers = Promise.all([\n *   Promise.resolve(40),\n *   Promise.resolve(36)\n * ]);\n *\n * numbers.then(_.spread(function(x, y) {\n *   return x + y;\n * }));\n * // => a Promise of 76\n */\nfunction spread(func, start) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n  return baseRest(function(args) {\n    var array = args[start],\n        otherArgs = castSlice(args, 0, start);\n\n    if (array) {\n      arrayPush(otherArgs, array);\n    }\n    return apply(func, this, otherArgs);\n  });\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = spread;\n","export default function render(vNode) {\n  if (typeof vNode === 'string') {\n    return document.createTextNode(vNode);\n  }\n\n  const { tagName, attrs, children } = vNode;\n\n  const $el = document.createElement(tagName);\n\n  for (const [key, value] of Object.entries(attrs)) {\n    $el.setAttribute(key, value);\n  }\n\n  for (const child of children) {\n    $el.appendChild(render(child));\n  }\n\n  return $el;\n}\n","import zip from 'lodash.zip';\nimport spread from 'lodash.spread';\nimport render from './render';\n\nexport default function diff(oldVNode, newVNode) {\n  if (!newVNode) {\n    return function removeOldVNode($node) {\n      $node.remove();\n      return undefined;\n    };\n  }\n\n  // diff one or two strings\n  if (typeof oldVNode === 'string' || typeof newVNode === 'string') {\n    if (oldVNode !== newVNode) {\n      return function replaceOldVNode($node) {\n        const $newNode = render(newVNode);\n        $node.replaceWith($newNode);\n        return $newNode;\n      };\n    }\n    return function doNothing() {\n      return undefined;\n    };\n  }\n\n  // when two v nodes have different tag names, we assume they are different\n  if (oldVNode.tagName !== newVNode.tagName) {\n    return function replaceOldVNode($node) {\n      const $newNode = render(newVNode);\n      $node.replaceWith($newNode);\n      return $newNode;\n    };\n  }\n\n  const patchAttrs = diffAttrs(oldVNode.attrs, newVNode.attrs);\n  const patchChildren = diffChildren(oldVNode.children, newVNode.children);\n\n  return function patchOldVNode($node) {\n    patchAttrs($node);\n    patchChildren($node);\n    return $node;\n  };\n}\n\nfunction diffAttrs(oldAttrs, newAttrs) {\n  const setAttrsPatches = Object.keys(newAttrs)\n    .filter(\n      attrName =>\n        !oldAttrs.hasOwnProperty(attrName) ||\n        oldAttrs[attrName] !== newAttrs[attrName]\n    )\n    .map(\n      attrName =>\n        function setAttr($node) {\n          $node.setAttribute(attrName, newAttrs[attrName]);\n          return $node;\n        }\n    );\n\n  const removeAttrPatches = Object.keys(oldAttrs)\n    .filter(oldAttrName => !newAttrs.hasOwnProperty(oldAttrName))\n    .map(\n      attrName =>\n        function removeOldVNodeAttr($node) {\n          $node.removeAttribute(attrName);\n          return $node;\n        }\n    );\n\n  const patches = removeAttrPatches.concat(setAttrsPatches);\n\n  return function patchOldVNodeAttrs($node) {\n    for (const patch of patches) {\n      patch($node);\n    }\n    return $node;\n  };\n}\n\nfunction diffChildren(oldVChildren, newVChildren) {\n  const childPatches = zip(oldVChildren, newVChildren).map(spread(diff));\n\n  const additionalPatches = newVChildren.slice(oldVChildren.length).map(\n    newChild =>\n      function appendNewVChild($node) {\n        $node.appendChild(render(newChild));\n        return $node;\n      }\n  );\n\n  return function patchChildren($parent) {\n    for (const [patch, child] of zip(childPatches, $parent.childNodes)) {\n      patch(child);\n    }\n    for (const patch of additionalPatches) {\n      patch($parent);\n    }\n    return $parent;\n  };\n}\n","export default function mount($node, $target) {\n  $target.replaceWith($node);\n  return $node;\n}\n","import _createElement from './createElement';\nimport _diff from './diff';\nimport _mount from './mount';\nimport _render from './render';\n\nexport const createElement = _createElement;\nexport const diff = _diff;\nexport const mount = _mount;\nexport const render = _render;\n","import { createElement, render, mount, diff } from './vdom';\n\nconst createApp = ({ count }) =>\n  createElement(\n    'div',\n    {\n      id: 'app',\n      count: count,\n    },\n    [\n      createElement('h1', undefined, ['VirtualDOMio']),\n      createElement('span', { id: 'count' }, [String(count)]),\n      createElement('input', {\n        type: 'text',\n        placeholder: 'Try typing while the app is updating',\n      }),\n      createElement('img', {\n        src: 'https://media.giphy.com/media/26DNdzl2XkgbbFAmk/giphy.gif',\n      }),\n    ]\n  );\n\nconst state = {\n  count: 0,\n};\n\nlet vApp = createApp(state);\nlet $root = mount(render(vApp), document.querySelector('#app'));\n\nsetInterval(() => {\n  state.count += 1;\n  const newVApp = createApp(state);\n  const patch = diff(vApp, newVApp);\n  $root = patch($root);\n  vApp = newVApp;\n}, 1000);\n"]}