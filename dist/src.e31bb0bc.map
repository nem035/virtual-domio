{"version":3,"sources":["vdom/createElement.js","../node_modules/lodash.zip/index.js","../node_modules/lodash.spread/index.js","vdom/render.js","vdom/diff.js","vdom/mount.js","vdom/index.js","index.js"],"names":["createElement","tagName","attrs","children","render","vNode","document","createTextNode","$el","Object","entries","key","value","setAttribute","child","appendChild","diff","oldVNode","newVNode","removeOldVNode","$node","remove","undefined","replaceOldVNode","$newNode","replaceWith","doNothing","patchAttrs","diffAttrs","patchChildren","diffChildren","patchOldVNode","oldAttrs","newAttrs","setAttrsPatches","keys","filter","attrName","hasOwnProperty","map","setAttr","removeAttrPatches","oldAttrName","removeOldVNodeAttr","removeAttribute","patches","concat","patchOldVNodeAttrs","patch","oldVChildren","newVChildren","childPatches","additionalPatches","slice","length","newChild","appendNewVChild","$parent","childNodes","mount","$target","_createElement","_diff","_mount","_render","createApp","count","id","String","type","placeholder","src","state","vApp","$root","querySelector","setInterval","newVApp"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAe,SAASA,aAAT,CAAuBC,OAAvB,EAA2D;AAAA,MAA3BC,KAA2B,uEAAnB,EAAmB;AAAA,MAAfC,QAAe,uEAAJ,EAAI;AACxE,SAAO;AACLF,IAAAA,OAAO,EAAPA,OADK;AAELC,IAAAA,KAAK,EAALA,KAFK;AAGLC,IAAAA,QAAQ,EAARA;AAHK,GAAP;AAKD;;ACND;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACpZe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACpC,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,WAAOC,QAAQ,CAACC,cAAT,CAAwBF,KAAxB,CAAP;AACD;;AAHmC,MAK5BJ,OAL4B,GAKCI,KALD,CAK5BJ,OAL4B;AAAA,MAKnBC,KALmB,GAKCG,KALD,CAKnBH,KALmB;AAAA,MAKZC,QALY,GAKCE,KALD,CAKZF,QALY;AAOpC,MAAMK,GAAG,GAAGF,QAAQ,CAACN,aAAT,CAAuBC,OAAvB,CAAZ;;AAPoC,aASTQ,MAAM,CAACC,OAAP,CAAeR,KAAf,CATS;;AASpC,2CAAkD;AAAA;AAAA,QAAtCS,GAAsC;AAAA,QAAjCC,KAAiC;;AAChDJ,IAAAA,GAAG,CAACK,YAAJ,CAAiBF,GAAjB,EAAsBC,KAAtB;AACD;;AAXmC;AAAA;AAAA;;AAAA;AAapC,yBAAoBT,QAApB,8HAA8B;AAAA,UAAnBW,KAAmB;AAC5BN,MAAAA,GAAG,CAACO,WAAJ,CAAgBX,MAAM,CAACU,KAAD,CAAtB;AACD;AAfmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBpC,SAAON,GAAP;AACD;;;;;;;;;AClBD;;AACA;;AACA;;;;;;;;;;;;AAEe,SAASQ,IAAT,CAAcC,QAAd,EAAwBC,QAAxB,EAAkC;AAC/C,MAAI,CAACA,QAAL,EAAe;AACb,WAAO,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AACpCA,MAAAA,KAAK,CAACC,MAAN;AACA,aAAOC,SAAP;AACD,KAHD;AAID,GAN8C,CAQ/C;;;AACA,MAAI,OAAOL,QAAP,KAAoB,QAApB,IAAgC,OAAOC,QAAP,KAAoB,QAAxD,EAAkE;AAChE,QAAID,QAAQ,KAAKC,QAAjB,EAA2B;AACzB,aAAO,SAASK,eAAT,CAAyBH,KAAzB,EAAgC;AACrC,YAAMI,QAAQ,GAAG,qBAAON,QAAP,CAAjB;AACAE,QAAAA,KAAK,CAACK,WAAN,CAAkBD,QAAlB;AACA,eAAOA,QAAP;AACD,OAJD;AAKD;;AACD,WAAO,SAASE,SAAT,GAAqB;AAC1B,aAAOJ,SAAP;AACD,KAFD;AAGD,GApB8C,CAsB/C;;;AACA,MAAIL,QAAQ,CAAChB,OAAT,KAAqBiB,QAAQ,CAACjB,OAAlC,EAA2C;AACzC,WAAO,SAASsB,eAAT,CAAyBH,KAAzB,EAAgC;AACrC,UAAMI,QAAQ,GAAG,qBAAON,QAAP,CAAjB;AACAE,MAAAA,KAAK,CAACK,WAAN,CAAkBD,QAAlB;AACA,aAAOA,QAAP;AACD,KAJD;AAKD;;AAED,MAAMG,UAAU,GAAGC,SAAS,CAACX,QAAQ,CAACf,KAAV,EAAiBgB,QAAQ,CAAChB,KAA1B,CAA5B;AACA,MAAM2B,aAAa,GAAGC,YAAY,CAACb,QAAQ,CAACd,QAAV,EAAoBe,QAAQ,CAACf,QAA7B,CAAlC;AAEA,SAAO,SAAS4B,aAAT,CAAuBX,KAAvB,EAA8B;AACnCO,IAAAA,UAAU,CAACP,KAAD,CAAV;AACAS,IAAAA,aAAa,CAACT,KAAD,CAAb;AACA,WAAOA,KAAP;AACD,GAJD;AAKD;;AAED,SAASQ,SAAT,CAAmBI,QAAnB,EAA6BC,QAA7B,EAAuC;AACrC,MAAMC,eAAe,GAAGzB,MAAM,CAAC0B,IAAP,CAAYF,QAAZ,EACrBG,MADqB,CAEpB,UAAAC,QAAQ;AAAA,WACN,CAACL,QAAQ,CAACM,cAAT,CAAwBD,QAAxB,CAAD,IACAL,QAAQ,CAACK,QAAD,CAAR,KAAuBJ,QAAQ,CAACI,QAAD,CAFzB;AAAA,GAFY,EAMrBE,GANqB,CAOpB,UAAAF,QAAQ;AAAA,WACN,SAASG,OAAT,CAAiBpB,KAAjB,EAAwB;AACtBA,MAAAA,KAAK,CAACP,YAAN,CAAmBwB,QAAnB,EAA6BJ,QAAQ,CAACI,QAAD,CAArC;AACA,aAAOjB,KAAP;AACD,KAJK;AAAA,GAPY,CAAxB;AAcA,MAAMqB,iBAAiB,GAAGhC,MAAM,CAAC0B,IAAP,CAAYH,QAAZ,EACvBI,MADuB,CAChB,UAAAM,WAAW;AAAA,WAAI,CAACT,QAAQ,CAACK,cAAT,CAAwBI,WAAxB,CAAL;AAAA,GADK,EAEvBH,GAFuB,CAGtB,UAAAF,QAAQ;AAAA,WACN,SAASM,kBAAT,CAA4BvB,KAA5B,EAAmC;AACjCA,MAAAA,KAAK,CAACwB,eAAN,CAAsBP,QAAtB;AACA,aAAOjB,KAAP;AACD,KAJK;AAAA,GAHc,CAA1B;AAUA,MAAMyB,OAAO,GAAGJ,iBAAiB,CAACK,MAAlB,CAAyBZ,eAAzB,CAAhB;AAEA,SAAO,SAASa,kBAAT,CAA4B3B,KAA5B,EAAmC;AAAA;AAAA;AAAA;;AAAA;AACxC,2BAAoByB,OAApB,8HAA6B;AAAA,YAAlBG,KAAkB;AAC3BA,QAAAA,KAAK,CAAC5B,KAAD,CAAL;AACD;AAHuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIxC,WAAOA,KAAP;AACD,GALD;AAMD;;AAED,SAASU,YAAT,CAAsBmB,YAAtB,EAAoCC,YAApC,EAAkD;AAChD,MAAMC,YAAY,GAAG,qBAAIF,YAAJ,EAAkBC,YAAlB,EAAgCX,GAAhC,CAAoC,sBAAOvB,IAAP,CAApC,CAArB;AAEA,MAAMoC,iBAAiB,GAAGF,YAAY,CAACG,KAAb,CAAmBJ,YAAY,CAACK,MAAhC,EAAwCf,GAAxC,CACxB,UAAAgB,QAAQ;AAAA,WACN,SAASC,eAAT,CAAyBpC,KAAzB,EAAgC;AAC9BA,MAAAA,KAAK,CAACL,WAAN,CAAkB,qBAAOwC,QAAP,CAAlB;AACA,aAAOnC,KAAP;AACD,KAJK;AAAA,GADgB,CAA1B;AAQA,SAAO,SAASS,aAAT,CAAuB4B,OAAvB,EAAgC;AAAA;AAAA;AAAA;;AAAA;AACrC,4BAA6B,qBAAIN,YAAJ,EAAkBM,OAAO,CAACC,UAA1B,CAA7B,mIAAoE;AAAA;AAAA,YAAxDV,KAAwD;AAAA,YAAjDlC,KAAiD;;AAClEkC,QAAAA,KAAK,CAAClC,KAAD,CAAL;AACD;AAHoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAIrC,4BAAoBsC,iBAApB,mIAAuC;AAAA,YAA5BJ,KAA4B;AACrCA,QAAAA,KAAK,CAACS,OAAD,CAAL;AACD;AANoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOrC,WAAOA,OAAP;AACD,GARD;AASD;;;;;;;;;ACpGc,SAASE,KAAT,CAAevC,KAAf,EAAsBwC,OAAtB,EAA+B;AAC5CA,EAAAA,OAAO,CAACnC,WAAR,CAAoBL,KAApB;AACA,SAAOA,KAAP;AACD;;;;;;;;;ACHD;;AACA;;AACA;;AACA;;;;AAEO,IAAMpB,aAAa,GAAG6D,uBAAtB;;AACA,IAAM7C,IAAI,GAAG8C,cAAb;;AACA,IAAMH,KAAK,GAAGI,eAAd;;AACA,IAAM3D,MAAM,GAAG4D,gBAAf;;;;;ACRP;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SAChB,yBACE,KADF,EAEE;AACEC,IAAAA,EAAE,EAAE,KADN;AAEED,IAAAA,KAAK,EAAEA;AAFT,GAFF,EAME,CACE,yBAAc,IAAd,EAAoB5C,SAApB,EAA+B,CAAC,cAAD,CAA/B,CADF,EAEE,yBAAc,MAAd,EAAsB;AAAE6C,IAAAA,EAAE,EAAE;AAAN,GAAtB,EAAuC,CAACC,MAAM,CAACF,KAAD,CAAP,CAAvC,CAFF,EAGE,yBAAc,OAAd,EAAuB;AACrBG,IAAAA,IAAI,EAAE,MADe;AAErBC,IAAAA,WAAW,EAAE;AAFQ,GAAvB,CAHF,EAOE,yBAAc,KAAd,EAAqB;AACnBC,IAAAA,GAAG,EAAE;AADc,GAArB,CAPF,CANF,CADgB;AAAA,CAAlB;;AAoBA,IAAMC,KAAK,GAAG;AACZN,EAAAA,KAAK,EAAE;AADK,CAAd;AAIA,IAAIO,IAAI,GAAGR,SAAS,CAACO,KAAD,CAApB;AACA,IAAIE,KAAK,GAAG,iBAAM,kBAAOD,IAAP,CAAN,EAAoBnE,QAAQ,CAACqE,aAAT,CAAuB,MAAvB,CAApB,CAAZ;AAEAC,WAAW,CAAC,YAAM;AAChBJ,EAAAA,KAAK,CAACN,KAAN,IAAe,CAAf;AACA,MAAMW,OAAO,GAAGZ,SAAS,CAACO,KAAD,CAAzB;AACA,MAAMxB,KAAK,GAAG,gBAAKyB,IAAL,EAAWI,OAAX,CAAd;AACAH,EAAAA,KAAK,GAAG1B,KAAK,CAAC0B,KAAD,CAAb;AACAD,EAAAA,IAAI,GAAGI,OAAP;AACD,CANU,EAMR,IANQ,CAAX","file":"src.e31bb0bc.map","sourceRoot":"../src","sourcesContent":["export default function createElement(tagName, attrs = {}, children = []) {\n  return {\n    tagName,\n    attrs,\n    children,\n  };\n}\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array ? array.length : 0,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = array;\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * This method is like `_.zip` except that it accepts an array of grouped\n * elements and creates an array regrouping the elements to their pre-zip\n * configuration.\n *\n * @static\n * @memberOf _\n * @since 1.2.0\n * @category Array\n * @param {Array} array The array of grouped elements to process.\n * @returns {Array} Returns the new array of regrouped elements.\n * @example\n *\n * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n * // => [['a', 1, true], ['b', 2, false]]\n *\n * _.unzip(zipped);\n * // => [['a', 'b'], [1, 2], [true, false]]\n */\nfunction unzip(array) {\n  if (!(array && array.length)) {\n    return [];\n  }\n  var length = 0;\n  array = arrayFilter(array, function(group) {\n    if (isArrayLikeObject(group)) {\n      length = nativeMax(group.length, length);\n      return true;\n    }\n  });\n  return baseTimes(length, function(index) {\n    return arrayMap(array, baseProperty(index));\n  });\n}\n\n/**\n * Creates an array of grouped elements, the first of which contains the\n * first elements of the given arrays, the second of which contains the\n * second elements of the given arrays, and so on.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to process.\n * @returns {Array} Returns the new array of grouped elements.\n * @example\n *\n * _.zip(['a', 'b'], [1, 2], [true, false]);\n * // => [['a', 1, true], ['b', 2, false]]\n */\nvar zip = baseRest(unzip);\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = zip;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = array;\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\n/**\n * Creates a function that invokes `func` with the `this` binding of the\n * create function and an array of arguments much like\n * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n *\n * **Note:** This method is based on the\n * [spread operator](https://mdn.io/spread_operator).\n *\n * @static\n * @memberOf _\n * @since 3.2.0\n * @category Function\n * @param {Function} func The function to spread arguments over.\n * @param {number} [start=0] The start position of the spread.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var say = _.spread(function(who, what) {\n *   return who + ' says ' + what;\n * });\n *\n * say(['fred', 'hello']);\n * // => 'fred says hello'\n *\n * var numbers = Promise.all([\n *   Promise.resolve(40),\n *   Promise.resolve(36)\n * ]);\n *\n * numbers.then(_.spread(function(x, y) {\n *   return x + y;\n * }));\n * // => a Promise of 76\n */\nfunction spread(func, start) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n  return baseRest(function(args) {\n    var array = args[start],\n        otherArgs = castSlice(args, 0, start);\n\n    if (array) {\n      arrayPush(otherArgs, array);\n    }\n    return apply(func, this, otherArgs);\n  });\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = spread;\n","export default function render(vNode) {\n  if (typeof vNode === 'string') {\n    return document.createTextNode(vNode);\n  }\n\n  const { tagName, attrs, children } = vNode;\n\n  const $el = document.createElement(tagName);\n\n  for (const [key, value] of Object.entries(attrs)) {\n    $el.setAttribute(key, value);\n  }\n\n  for (const child of children) {\n    $el.appendChild(render(child));\n  }\n\n  return $el;\n}\n","import zip from 'lodash.zip';\nimport spread from 'lodash.spread';\nimport render from './render';\n\nexport default function diff(oldVNode, newVNode) {\n  if (!newVNode) {\n    return function removeOldVNode($node) {\n      $node.remove();\n      return undefined;\n    };\n  }\n\n  // diff one or two strings\n  if (typeof oldVNode === 'string' || typeof newVNode === 'string') {\n    if (oldVNode !== newVNode) {\n      return function replaceOldVNode($node) {\n        const $newNode = render(newVNode);\n        $node.replaceWith($newNode);\n        return $newNode;\n      };\n    }\n    return function doNothing() {\n      return undefined;\n    };\n  }\n\n  // when two v nodes have different tag names, we assume they are different\n  if (oldVNode.tagName !== newVNode.tagName) {\n    return function replaceOldVNode($node) {\n      const $newNode = render(newVNode);\n      $node.replaceWith($newNode);\n      return $newNode;\n    };\n  }\n\n  const patchAttrs = diffAttrs(oldVNode.attrs, newVNode.attrs);\n  const patchChildren = diffChildren(oldVNode.children, newVNode.children);\n\n  return function patchOldVNode($node) {\n    patchAttrs($node);\n    patchChildren($node);\n    return $node;\n  };\n}\n\nfunction diffAttrs(oldAttrs, newAttrs) {\n  const setAttrsPatches = Object.keys(newAttrs)\n    .filter(\n      attrName =>\n        !oldAttrs.hasOwnProperty(attrName) ||\n        oldAttrs[attrName] !== newAttrs[attrName]\n    )\n    .map(\n      attrName =>\n        function setAttr($node) {\n          $node.setAttribute(attrName, newAttrs[attrName]);\n          return $node;\n        }\n    );\n\n  const removeAttrPatches = Object.keys(oldAttrs)\n    .filter(oldAttrName => !newAttrs.hasOwnProperty(oldAttrName))\n    .map(\n      attrName =>\n        function removeOldVNodeAttr($node) {\n          $node.removeAttribute(attrName);\n          return $node;\n        }\n    );\n\n  const patches = removeAttrPatches.concat(setAttrsPatches);\n\n  return function patchOldVNodeAttrs($node) {\n    for (const patch of patches) {\n      patch($node);\n    }\n    return $node;\n  };\n}\n\nfunction diffChildren(oldVChildren, newVChildren) {\n  const childPatches = zip(oldVChildren, newVChildren).map(spread(diff));\n\n  const additionalPatches = newVChildren.slice(oldVChildren.length).map(\n    newChild =>\n      function appendNewVChild($node) {\n        $node.appendChild(render(newChild));\n        return $node;\n      }\n  );\n\n  return function patchChildren($parent) {\n    for (const [patch, child] of zip(childPatches, $parent.childNodes)) {\n      patch(child);\n    }\n    for (const patch of additionalPatches) {\n      patch($parent);\n    }\n    return $parent;\n  };\n}\n","export default function mount($node, $target) {\n  $target.replaceWith($node);\n  return $node;\n}\n","import _createElement from './createElement';\nimport _diff from './diff';\nimport _mount from './mount';\nimport _render from './render';\n\nexport const createElement = _createElement;\nexport const diff = _diff;\nexport const mount = _mount;\nexport const render = _render;\n","import { createElement, render, mount, diff } from './vdom';\n\nconst createApp = ({ count }) =>\n  createElement(\n    'div',\n    {\n      id: 'app',\n      count: count,\n    },\n    [\n      createElement('h1', undefined, ['VirtualDOMio']),\n      createElement('span', { id: 'count' }, [String(count)]),\n      createElement('input', {\n        type: 'text',\n        placeholder: 'Try typing while the app is updating',\n      }),\n      createElement('img', {\n        src: 'https://media.giphy.com/media/26DNdzl2XkgbbFAmk/giphy.gif',\n      }),\n    ]\n  );\n\nconst state = {\n  count: 0,\n};\n\nlet vApp = createApp(state);\nlet $root = mount(render(vApp), document.querySelector('#app'));\n\nsetInterval(() => {\n  state.count += 1;\n  const newVApp = createApp(state);\n  const patch = diff(vApp, newVApp);\n  $root = patch($root);\n  vApp = newVApp;\n}, 1000);\n"]}